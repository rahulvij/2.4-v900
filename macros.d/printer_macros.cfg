######################### PRINT START / END #########################
[gcode_macro PRINT_START]
gcode:
#   SET_TEMPERATURE_LED LED=bed_light SENSOR=heater_bed

    {action_respond_info("Running PRINT START...")}    
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    {% set chamber_sensor = printer["temperature_sensor chamber"] %}

    DISPLAY_ON            # Turn on the Display
    # Homes the printer and sets absolute positioning
    G28                   # Full home (XYZ)
    G90                   # Absolut position

    # If the chamber is less than target then soak for 30 mins else 5 mins
    {% if chamber_sensor.temperature|int < target_chamber %}
        PREP_CHAMBER BED={target_bed} CHAMBER={target_chamber} SOAK=30
    {% else %}
        PREP_CHAMBER BED={target_bed} CHAMBER={target_chamber} SOAK=0
    {% endif %}
    
    # Heats up the nozzle up to target via slicer
    M107                        # Turns off partcooling fan
    M109 S{target_extruder}     # Heats the nozzle to printing temp

    SET_GCODE_OFFSET Z=0.0      # zero out the offset
    G21                         # set units to millimeters
    G32                         # Home XYZ and do QGL

    #KAMP Mesh and line purge 
    SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 FUZZ_ENABLE=1
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE

    SETUP_LINE_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1 PURGE_AMOUNT=30
    LINE_PURGE                  # Adaptive Purge

    M117 "Printing..."

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:

    CLEAR_PAUSE					   ; clear pause (from M191) if there is one
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600                      # move nozzle up
    G0 X{x_safe} Y{y_safe} F20000           # move nozzle to remove stringing      
    TURN_OFF_HEATERS
    M107                                    # turn off PT fan
    G90                                     # absolute positioning
    G0 X{max_x-5} Y{max_y-5} F3600          # park nozzle at rear
    
    BED_MESH_CLEAR                          # Clear the mesh
    DISPLAY_OFF                             # turn off display
    M117 "Finished Printing..."
     
######################### PREP FOR PRINT #########################

[gcode_macro PREP_CHAMBER]
gcode:
    {% set target_bed = params.BED|default(110)|int %}
    {% set target_chamber = params.CHAMBER|default(40)|int %}
    {% set soak_delay = params.SOAK|default(30)|float %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    {% set z_wait = 50 %}
    
    {action_respond_info("Running PREP CHAMBER...")}    

    # Homes the printer and sets absolute positioning
    _CG28                   # Full home (XYZ)
    G90                     # Absolut position

    # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
    {% if target_bed >= 100 %} 
        G1 X{x_wait} Y{y_wait} Z{z_wait} F9000                  # Goes to center of the bed
        M190 S{target_bed}                                      # Sets target temp for the bed
        M106 S153                                               # Turn Fan on at 60%
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
        _SOAK SOAK={soak_delay}

  # If the bed temp is not over 100c then it skips the heatsoak and just heats up to set temp with a 5min soak.
    {% else %} 
        G1 X{x_wait} Y{y_wait} Z{z_wait} F9000                  # Goes to center of the bed
        M190 S{target_bed}                                      # Sets target temp for the bed
        G4 P300000                                              # Waits 5 min for the bedtemp to stabilize
    {% endif %} 

[gcode_macro _SOAK]
gcode:
    {% set soak_delay = params.SOAK|default(30)|float %}    
    {action_respond_info("Starting Soak for %d mins" % (soak_delay) )}

    {% for timer in range(soak_delay|int,0,-1) %}
      M105
      G4 P60000 # Wait 1 minute
    {% endfor %}

    {action_respond_info("Finished Soak")}

######################### DISPLAY #########################
##    Index 1 = display, Index 2 and 3 = Knob
[gcode_macro DISPLAY_OFF]
gcode:
    SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=0

[gcode_macro DISPLAY_ON]
gcode:
  SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0
       
######################### MOVE #########################

[gcode_macro _CG28]
description: Helper: Conditional homing
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %} 
        G28 
    {% endif %}

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR                  ; Clear MESH
    G28                             ; home all axes
    QUAD_GANTRY_LEVEL
    CLEAN_NOZZLE                    ; Clean the Nozzle now before final home
    G28                             ; home all axes again
    MOVE_CENTER                     ; Move to the middle

[gcode_macro MOVE_CENTER]
description: Move head to center bed, Z argument default 20
gcode:
    {% set Z = params.Z|default(40)|float %}
    {% set X = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set Y = printer.toolhead.axis_maximum.y|float / 2 %}
    _CG28
    G90
    G0 X{X} Y{Y} Z{Z} F12000